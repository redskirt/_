<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sasaki</groupId>
	<artifactId>ml-bootcamp</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	
	<name>Machine learning bootcamp</name>

	<properties>
		<encoding>UTF-8</encoding>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<scala.version>2.11</scala.version>
		<scala.minor.version>${scala.version}.8</scala.minor.version>
		<spark.version>2.2.1</spark.version>
		<cdh.version>cdh5.11.1</cdh.version>
		<hadoop.version>2.6.0-${cdh.version}</hadoop.version>
		<hive.group><!-- org.apache.hive -->
			org.spark-project.hive
		</hive.group>
		<!-- Version used in Maven Hive dependency -->
		<hive.version><!-- 1.1.0-cdh5.11.1 -->
			1.2.1.spark2
		</hive.version>
		<!-- Version used for internal directory structure -->
		<hive.version.short><!-- 1.1.0 -->
			1.2.1
		</hive.version.short>
	</properties>

	<repositories>
		<repository>
			<id>releases</id>
			<name>local private release</name>
			<url>http://188.188.33.28:8080/nexus/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>snapshots</id>
			<name>local private snapshot</name>
			<url>http://188.188.33.28:8080/nexus/content/repositories/snapshots/</url>
		</repository>
		<repository>
			<id>cdh-releases</id>
			<name>Cloudera</name>
			<url>https://repository.cloudera.com/content/repositories/releases/</url>
		</repository>
		<repository>
			<id>nexus-2edparty</id>
			<name>local private release</name>
			<url>http://188.188.33.28:8080/nexus/content/repositories/2edparty/</url>
		</repository>
	</repositories>
	
	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.minor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-compiler</artifactId>
			<version>${scala.minor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-reflect</artifactId>
			<version>${scala.minor.version}</version>
		</dependency>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scalap</artifactId>
			<version>${scala.minor.version}</version>
		</dependency>

		<!-- Spark ${spark.version} -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-library</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-reflect</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.zookeeper</groupId>
					<artifactId>zookeeper</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-library</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-reflect</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-hive_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-library</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-reflect</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala.version}</artifactId>
			<version>${spark.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-library</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.scala-lang</groupId>
					<artifactId>scala-reflect</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.zookeeper</groupId>
					<artifactId>zookeeper</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-common</artifactId>
			<version>${hadoop.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.hadoop</groupId>
			<artifactId>hadoop-client</artifactId>
			<version>${hadoop.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.servlet</groupId>
					<artifactId>*</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>${hive.group}</groupId>
			<artifactId>hive-metastore</artifactId>
			<version>${hive.version}</version>
			<scope>${hive.deps.scope}</scope>
			<exclusions>
				<exclusion>
					<groupId>${hive.group}</groupId>
					<artifactId>spark-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>${hive.group}</groupId>
			<artifactId>hive-exec</artifactId>
			<version>${hive.version}</version>
			<scope>${hive.deps.scope}</scope>
			<exclusions>
				<exclusion>
					<groupId>${hive.group}</groupId>
					<artifactId>spark-client</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>